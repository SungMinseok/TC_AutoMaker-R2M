# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '230414.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.

import sys
from enum import Enum, auto
import datetime
import os
from PyQt5 import QtCore, QtGui, QtWidgets
from PyQt5.QtWidgets import QApplication, QMainWindow, QLabel, QPushButton, QFileDialog, QTextEdit, QComboBox

import CLMaker_cashshop as ClCash
import CLMaker_Event as ClEvent
import openpyxl





# class MyWindow(QtWidgets.QWidget):
#     def __init__(self, parent=None):
#         super().__init__(parent)
#         self.input_datapath = MyLineEdit()
#         self.layout = QtWidgets.QVBoxLayout(self)
#         self.layout.addWidget(self.input_datapath)






class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(433, 267)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.horizontalLayoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget.setGeometry(QtCore.QRect(10, 30, 401, 31))
        self.horizontalLayoutWidget.setObjectName("horizontalLayoutWidget")
        self.horizontalLayout = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget)
        self.horizontalLayout.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout.setObjectName("horizontalLayout")
        self.label_13 = QtWidgets.QLabel(self.horizontalLayoutWidget)
        self.label_13.setMinimumSize(QtCore.QSize(0, 23))
        self.label_13.setMaximumSize(QtCore.QSize(16777215, 23))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_13.setFont(font)
        self.label_13.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_13.setStyleSheet("background-color: rgb(31, 78,120);\n"
"color: rgb(255, 255, 255);\n"
"font : bold")
        self.label_13.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_13.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_13.setObjectName("label_13")
        self.horizontalLayout.addWidget(self.label_13)
        self.combox_contents = QtWidgets.QComboBox(self.horizontalLayoutWidget)
        self.combox_contents.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.combox_contents.sizePolicy().hasHeightForWidth())
        self.combox_contents.setSizePolicy(sizePolicy)
        self.combox_contents.setMinimumSize(QtCore.QSize(0, 0))
        self.combox_contents.setMaximumSize(QtCore.QSize(1888888, 23))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        self.combox_contents.setFont(font)
        self.combox_contents.setStyleSheet("background-color: rgb(155, 194, 230);")
        self.combox_contents.setInsertPolicy(QtWidgets.QComboBox.InsertAtBottom)
        self.combox_contents.setIconSize(QtCore.QSize(16, 15))
        self.combox_contents.setPlaceholderText("")
        self.combox_contents.setObjectName("combox_contents")
        self.combox_contents.addItem("")
        self.combox_contents.addItem("")
        self.horizontalLayout.addWidget(self.combox_contents)
        self.horizontalLayoutWidget_2 = QtWidgets.QWidget(self.centralwidget)
        self.horizontalLayoutWidget_2.setGeometry(QtCore.QRect(10, 64, 401, 31))
        self.horizontalLayoutWidget_2.setObjectName("horizontalLayoutWidget_2")
        self.horizontalLayout_2 = QtWidgets.QHBoxLayout(self.horizontalLayoutWidget_2)
        self.horizontalLayout_2.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_2.setObjectName("horizontalLayout_2")
        self.label_14 = QtWidgets.QLabel(self.horizontalLayoutWidget_2)
        self.label_14.setMinimumSize(QtCore.QSize(0, 23))
        self.label_14.setMaximumSize(QtCore.QSize(16777215, 23))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.label_14.setFont(font)
        self.label_14.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.label_14.setStyleSheet("background-color: rgb(31, 78,120);\n"
"color: rgb(255, 255, 255);\n"
"font : bold")
        self.label_14.setFrameShape(QtWidgets.QFrame.NoFrame)
        self.label_14.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.label_14.setObjectName("label_14")
        self.horizontalLayout_2.addWidget(self.label_14)
        self.combox_doctype = QtWidgets.QComboBox(self.horizontalLayoutWidget_2)
        self.combox_doctype.setEnabled(True)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Ignored)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.combox_doctype.sizePolicy().hasHeightForWidth())
        self.combox_doctype.setSizePolicy(sizePolicy)
        self.combox_doctype.setMinimumSize(QtCore.QSize(0, 0))
        self.combox_doctype.setMaximumSize(QtCore.QSize(1888888, 23))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        self.combox_doctype.setFont(font)
        self.combox_doctype.setStyleSheet("background-color: rgb(155, 194, 230);")
        self.combox_doctype.setInsertPolicy(QtWidgets.QComboBox.InsertAtBottom)
        self.combox_doctype.setIconSize(QtCore.QSize(16, 15))
        self.combox_doctype.setPlaceholderText("")
        self.combox_doctype.setObjectName("combox_doctype")
        self.combox_doctype.addItem("")
        self.combox_doctype.addItem("")
        self.horizontalLayout_2.addWidget(self.combox_doctype)
        self.layoutWidget = QtWidgets.QWidget(self.centralwidget)
        self.layoutWidget.setGeometry(QtCore.QRect(10, 100, 401, 31))
        self.layoutWidget.setObjectName("layoutWidget")
        self.horizontalLayout_5 = QtWidgets.QHBoxLayout(self.layoutWidget)
        self.horizontalLayout_5.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_5.setObjectName("horizontalLayout_5")
        self.input_datapath = QtWidgets.QLineEdit(self.layoutWidget)
        #self.input_datapath.setAcceptDrops(True)



        #self.input_datapath =MyLineEdit()

        #self.input_datapath =MyLineEdit()
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.input_datapath.sizePolicy().hasHeightForWidth())
        self.input_datapath.setSizePolicy(sizePolicy)
        self.input_datapath.setMinimumSize(QtCore.QSize(0, 23))
        self.input_datapath.setMaximumSize(QtCore.QSize(16777215, 16777215))
        font = QtGui.QFont()
        font.setPointSize(9)
        self.input_datapath.setFont(font)
        self.input_datapath.setObjectName("input_datapath")





        self.horizontalLayout_5.addWidget(self.input_datapath)
        self.btn_datapath = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_datapath.sizePolicy().hasHeightForWidth())
        self.btn_datapath.setSizePolicy(sizePolicy)
        self.btn_datapath.setMinimumSize(QtCore.QSize(0, 0))
        self.btn_datapath.setMaximumSize(QtCore.QSize(20, 16777215))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        self.btn_datapath.setFont(font)
        self.btn_datapath.setStyleSheet("background-color: rgb(155, 194, 230);")
        self.btn_datapath.setObjectName("btn_datapath")
        self.horizontalLayout_5.addWidget(self.btn_datapath)
        self.btn_datapath_2 = QtWidgets.QPushButton(self.layoutWidget)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_datapath_2.sizePolicy().hasHeightForWidth())
        self.btn_datapath_2.setSizePolicy(sizePolicy)
        self.btn_datapath_2.setMinimumSize(QtCore.QSize(0, 0))
        self.btn_datapath_2.setMaximumSize(QtCore.QSize(55, 16777215))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        self.btn_datapath_2.setFont(font)
        self.btn_datapath_2.setStyleSheet("background-color: rgb(155, 194, 230);")
        self.btn_datapath_2.setObjectName("btn_datapath_2")
        self.horizontalLayout_5.addWidget(self.btn_datapath_2)
        self.dateedit = QtWidgets.QDateEdit(self.centralwidget)
        self.dateedit.setEnabled(True)
        self.dateedit.setGeometry(QtCore.QRect(300, 140, 110, 22))
        self.dateedit.setObjectName("dateedit")
        self.btn_execute = QtWidgets.QPushButton(self.centralwidget)
        self.btn_execute.setGeometry(QtCore.QRect(330, 180, 80, 23))
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Ignored, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.btn_execute.sizePolicy().hasHeightForWidth())
        self.btn_execute.setSizePolicy(sizePolicy)
        self.btn_execute.setMinimumSize(QtCore.QSize(80, 0))
        self.btn_execute.setMaximumSize(QtCore.QSize(80, 16777215))
        font = QtGui.QFont()
        font.setFamily("맑은 고딕")
        font.setPointSize(9)
        font.setBold(True)
        font.setItalic(False)
        font.setWeight(75)
        self.btn_execute.setFont(font)
        self.btn_execute.setStyleSheet("background-color: rgb(47, 117, 181);\n"
"color: rgb(255, 255, 255);\n"
"font: bold")
        self.btn_execute.setObjectName("btn_execute")
        self.progressbar = QtWidgets.QProgressBar(self.centralwidget)
        self.progressbar.setGeometry(QtCore.QRect(10, 180, 311, 20))
        self.progressbar.setMaximumSize(QtCore.QSize(17677, 16777215))
        self.progressbar.setProperty("value", 0)
        self.progressbar.setAlignment(QtCore.Qt.AlignCenter)
        self.progressbar.setTextVisible(True)
        self.progressbar.setObjectName("progressbar")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 433, 21))
        self.menubar.setObjectName("menubar")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        self.combox_contents.setCurrentIndex(0)
        self.combox_doctype.setCurrentIndex(0)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    
    
    
    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "RDM (R2M Document Maker)"))
        self.label_13.setText(_translate("MainWindow", " 컨텐츠"))
        self.combox_contents.setItemText(0, _translate("MainWindow", "유료상점"))
        self.combox_contents.setItemText(1, _translate("MainWindow", "이벤트"))
        self.label_14.setText(_translate("MainWindow", " 문서타입"))
        self.combox_doctype.setItemText(0, _translate("MainWindow", "TC"))
        self.combox_doctype.setItemText(1, _translate("MainWindow", "CL"))
        self.input_datapath.setPlaceholderText(_translate("MainWindow", "대상 데이터 파일 경로"))
        self.btn_datapath.setText(_translate("MainWindow", "..."))
        self.btn_datapath_2.setText(_translate("MainWindow", "열기"))
        self.btn_execute.setText(_translate("MainWindow", "실행 (F2)"))
        self.btn_execute.setShortcut(_translate("MainWindow", "F1"))

    


        self.btn_datapath.clicked.connect(self.select_data_file)
        self.btn_execute.clicked.connect(self.activate)

        self.input_datapath.setAcceptDrops(True)
        self.input_datapath.dragEnterEvent = self.drag_enter_event
        self.input_datapath.dropEvent = self.drop_event
    

#기본동작■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■

    def select_data_file(self):
        # Open a file dialog to select the data file
        file_filter = "Video files (*.mp4 *.mkv)"
        file_filter = "엑셀 파일 (*.xlsx)"

        data_file, _ = QFileDialog.getOpenFileName(MainWindow,"데이터 파일 선택", filter= file_filter)
        self.input_datapath.setText(data_file)

    def drag_enter_event(self, event):
        # 드래그앤드랍 가능한 MIME 타입인지 체크
        if event.mimeData().hasUrls():
            event.accept()
        else:
            event.ignore()
    
    def drop_event(self, event):
        # 파일 경로를 가져와서 QLineEdit에 입력
        urls = event.mimeData().urls()
        file_path = urls[0].toLocalFile()
        self.input_datapath.setText(file_path)

#■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■■
    def activate(self):

        if self.combox_contents.currentText() == "유료상점" and self.combox_doctype.currentText() == "CL" :

            #data = ClCash.extract_data_cashshop(self.input_datapath.text())
            data = ClCash.extract_data_cashshop("이벤트DATA_KR.xlsx")
            ClCash.write_data_cashshop_inspection(data)
            ClCash.postprocess_cashshop()

        #wb = openpyxl.load_workbook('result_230420_095250.xlsx')
        

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec_())
